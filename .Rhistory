iter = 2000,  # default
chains = 4,  # default
sample_prior = TRUE,  # can be used to calculate BF?
cores = detectCores())  # use MCMC
save(interaction, file = "interaction")
summary(fit_interaction)
save(interaction, file = "interaction")
model_comparison <- LOO(fit_null, fit_timepoint, fit_condition, fit_interaction)
save(model_comparison, file = "model_comparison")
model_comparison
waic_model_comparison <- waic(fit_null, fit_timepoint, fit_condition, fit_interaction)
save(waic_model_comparison, file = "waic_model_comparison")
waic_model_comparison
waic_model_comparison$ic_diffs__
waic_model_comparison$fit_null
waic_model_comparison
loo_model_comparison <- LOO(fit_null, fit_timepoint, fit_condition, fit_interaction)
save(loo_model_comparison, file = "loo_model_comparison")
loo_model_comparison
waic_model_comparison <- waic(fit_null, fit_timepoint, fit_condition, fit_interaction)
setwd("/Users/Ian/Dropbox/Work/Projects/Alphabet soup/Hussey & Hughes - Derivation study/OSF - Transitive relations and implicit attitudes/Experiment 3/")
data_df <-
read.csv("Processed data/processed data - long format IAT data.csv") %>%
mutate(block = ifelse(block == 1, "IAT block 1", "IAT block 2"),
block = as.factor(block),
condition = as.factor(ifelse(condition == 1, "Condition 1", "Condition 2")),
participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
setwd("/Users/Ian/Dropbox/Work/Projects/Alphabet soup/Hussey & Hughes - Derivation study/OSF - Transitive relations and implicit attitudes/Experiment 3/")
data_df <-
read.csv("Processed data/processed data - long format IAT data.csv") %>%
mutate(block = ifelse(block == 1, "IAT block 1", "IAT block 2"),
block = as.factor(block),
condition = as.factor(ifelse(condition == 1, "Condition 1", "Condition 2")),
participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
setwd("/Users/Ian/git/brms-testing/")
setwd("/Users/Ian/git/brms-testing/")
prior <- c(set_prior("cauchy(0, 0.707)", class = "b"),  # "fixed" effect
set_prior("cauchy(0, 1.0)", class = "sd"))    # "random" effect
fit_gauss_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = gaussian(link = "identity"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
fit_exgauss_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = exgaussian(link = "identity"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
save(fit_gauss_full, file = "fit_gauss_full")
save(fit_exgauss_full, file = "fit_exgauss_full")
fit_ordinal_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = cumulative(link = "logit"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
save(fit_ordinal_full, file = "fit_ordinal_full")
fit_ordinal_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = cumulative(link = "logit"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
summary(fit_gauss_full)
View(data_df)
View(data_df)
summary(fit_gauss_full)
plot(fit_gauss_full, ask = FALSE)
setwd("/Users/Ian/git/brms-testing/")
prior <- c(set_prior("cauchy(0, 0.707)", class = "b"),  # "fixed" effect
set_prior("cauchy(0, 1.0)", class = "sd"))    # "random" effect
load(file = "fit_gauss_full.rdata")
load(file = "fit_gauss_full")
plot(fit_gauss_full, ask = FALSE)
data_df %>% max(rt)
require(tidyverse)
require(brms)
require(parallel)
data_df %>% max(rt)
setwd("/Users/Ian/Dropbox/Work/Projects/Alphabet soup/Hussey & Hughes - Derivation study/OSF - Transitive relations and implicit attitudes/Experiment 3/")
data_df <-
read.csv("Processed data/processed data - long format IAT data.csv") %>%
mutate(block = ifelse(block == 1, "IAT block 1", "IAT block 2"),
block = as.factor(block),
condition = as.factor(ifelse(condition == 1, "Condition 1", "Condition 2")),
participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
data_df %>% max(rt)
data_df %>% max(rt)
max(data_df$rt)
min(data_df$rt)
median(data_df$rt)
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 < 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 > 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 > 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
p1 <- plot(H1, plot = FALSE, theme = theme_get())[[1]]
p1 + scale_x_continuous(limits = c(-2, 2)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
p1 + scale_x_continuous(limits = c(-2, 10)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
H1$hypothesis$`u-95% CI`
p1 + scale_x_continuous(limits = c(-3, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
summary(fit_gauss_full)  # HDI for interaction does not contain zero, but BF test below
H2 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H2
1/H2$hypothesis$Evid.Ratio
p2 <- plot(H2, plot = FALSE, theme = theme_get())[[1]]
p2 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
p2 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + scale_x_continuous(limits = c(-3, 3)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
H2 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H2
p2 +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + scale_x_continuous(limits = c(-100, 100)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + coord_cartesian(ylim = c(-100, 100)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + coord_cartesian(xlim = c(-100, 100)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + coord_cartesian(xlim = c(-500, 1000)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + coord_cartesian(xlim = c(-1000, 1000)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p1 + coord_cartesian(xlim = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
p2 + scale_x_continuous(limits = c(-1000, 1000)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + scale_x_continuous(limits = c(-50, 400)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
p2 + scale_x_continuous(limits = c(-20, 170)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H2$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H2$hypothesis$`u-95% CI`)
1/H1$hypothesis$Evid.Ratio
p1 <- plot(H1, plot = FALSE, theme = theme_get())[[1]]
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 > 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
p1 <- plot(H1, plot = FALSE, theme = theme_get())[[1]]
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 < 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
p1 <- plot(H1, plot = FALSE, theme = theme_get())[[1]]
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
p1 <- plot(H1, plot = FALSE, theme = theme_get())[[1]]
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
?`brms-package`
plot(marginal_effects(fit_gauss_full), ask = FALSE)
?marginal_effects
plot(marginal_effects(fit_gauss_full, points = TRUE), ask = FALSE)
plot(marginal_effects(fit_gauss_full, points = TRUE), ask = FALSE)
plot(marginal_effects(fit_gauss_full), points = TRUE, ask = FALSE)
plot(marginal_effects(fit_gauss_full), ask = FALSE)
marginal_effects(fit_gauss_full)
plot(marginal_effects(fit_gauss_full), ask = FALSE) + theme_minimal()
setwd("/Users/Ian/Dropbox/Work/Projects/Alphabet soup/Hussey & Hughes - Derivation study/OSF - Transitive relations and implicit attitudes/Experiment 2/")
data_df <-
read.csv("Processed data/processed data - long format IAT data.csv") %>%
mutate(block = ifelse(block == 1, "IAT block 1", "IAT block 2"),
block = as.factor(block),
condition = as.factor(ifelse(condition == 1, "Condition 1", "Condition 2")),
participant = as.factor(participant)) %>%
schoRsch::outlier(dv = "rt",
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
max(data_df$rt)
min(data_df$rt)
median(data_df$rt)
setwd("/Users/Ian/git/brms-testing/")
prior <- c(set_prior("cauchy(0, 0.707)", class = "b"),  # "fixed" effect
set_prior("cauchy(0, 1.0)", class = "sd"))    # "random" effect
fit_gauss_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = gaussian(link = "identity"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
save(fit_gauss_full, file = "fit_gauss_full.rdata")
summary(fit_gauss_full)  # HDI for interaction does not contain zero, but BF test below
plot(marginal_effects(fit_gauss_full), ask = FALSE)
H1 <- fit_gauss_full %>%
hypothesis(hypothesis = "blockIATblock2:conditionCondition2 = 0", alpha=.05)  # Evid.Ratio is BF01 i.e., for this hypothesis
H1
1/H1$hypothesis$Evid.Ratio
p1 <- plot(H1, plot = FALSE, theme = theme_get())[[1]]
p1 + scale_x_continuous(limits = c(-5, 25)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
H1
p1 + scale_x_continuous(limits = c(-70, 10)) +
theme_minimal() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = H1$hypothesis$`l-95% CI`) +
geom_vline(xintercept = H1$hypothesis$`u-95% CI`)
fit_ordinal_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = cumulative(link = "logit"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
fit_exgauss_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = exgaussian(link = "identity"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
fit_exgauss_full <- brm(formula = rt ~ block * condition + (1 | participant),
data = data_df,
family = exgaussian(link = "identity"),
prior = prior,
iter = 2000,  # default
warmup = 500,
chains = 4,  # default
#cov_ranef = "participant",  # for setting random effects?
sample_prior = TRUE,
cores = detectCores())
cat("\nThe best link function is ", links[bestfit %% length(links)], " with a ",
thresholds[1 + bestfit %/% length(thresholds)], " threshold (logLik ", llks[bestfit],
")\n", sep="")
cumulativemodelfit <- function(formula,
data,
links = c("logit", "probit", "cloglog", "cauchit"),
thresholds = c("flexible", "equidistant"),
verbose=TRUE) {
names(links) <- links
names(thresholds) <- thresholds
llks <- outer(links, thresholds,
Vectorize(function(link, threshold)
# catch error for responses with 2 levels
tryCatch(ordinal::clm(formula, data=data, link=link, threshold=threshold)$logLik,
error = function(e) NA)))
print(llks)
if (verbose) {
bestfit <- which.max(llks)
cat("\nThe best link function is ", links[bestfit %% length(links)], " with a ",
thresholds[1 + bestfit %/% length(thresholds)], " threshold (logLik ", llks[bestfit],
")\n", sep="")
}
invisible(llks)
}
require(ordinal)
cumulativemodelfit(rt ~ 1, data = data_df)
# title: "Demonstration of bayesian estimation and hypothesis testing using simulated data, via both Bayes Factors and Highest Density Intervals"
# author: "Ian Hussey (ian.hussey@ugent.be)"
# Remaining quesitons:
# - do HDI intervals and BF always agree?
# - pp_check() ??
# - plot(marginal_effects()) ??
# - shinystan app has lots of checks that aren't documented here
# - predictions?
# - report mean or median posterior?
# - how to use posterior of one model as prior for a follow up study?
# - how to implement a sequential testing workflow here?
# dependencies ------------------------------------------------------------
library(tidyverse)
library(ez)
library(schoRsch)
library(brms)
library(parallel)
modal_value <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# simulate data -----------------------------------------------------------
# data simulated to have two main effects and an interaction effect.
# there are probably more efficient ways to do this, but it works.
# set seed for reproducability
set.seed(0)
# condition 1 data
condition         <- c(rep(1, 100))
T1                <- rnorm(100, mean = 0, sd = 1)
T2                <- rnorm(100, mean = 1, sd = 1)
generated_data_1  <- data.frame(condition, T1, T2)
# condition 2 data
condition         <- c(rep(2, 100))
T1                <- rnorm(100, mean = 0.4, sd = 1)
T2                <- rnorm(100, mean = 0.9, sd = 1)
generated_data_2  <- data.frame(condition, T1, T2)
# combined data
generated_data <-
bind_rows(generated_data_1, generated_data_2) %>%
rownames_to_column(var = "participant") %>%
gather(timepoint, dv, c(T1, T2)) %>%  # reshape to long format
mutate(timepoint = as.factor(timepoint),
condition = as.factor(condition),
participant = as.factor(participant))
# plot --------------------------------------------------------------------
# rehape and summarize data for plotting
summary_data <- generated_data%>%
group_by(timepoint, condition) %>%
summarize(mean_dv = mean(dv))
ggplot(summary_data, aes(x = timepoint, y = mean_dv, group = condition, colour = condition)) +
geom_line() +
theme_minimal()
# check differences via freq anova ----------------------------------------
# check main and interaction effects via frequentist analysis for the sake of familiarity
fit_1 <- ezANOVA(data = generated_data,
dv = dv,
within = timepoint,
between = condition,
wid = participant,
type = 3,
detailed = TRUE)
fit_1 <- ezANOVA(data = generated_data,
dv = dv,
within = timepoint,
between = condition,
wid = participant,
type = 3,
detailed = TRUE)
anova_out(fit_1,
print = TRUE,
sph.cor = "GG",
mau.p = 0.05,
etasq = "partial")
t
fit_1_summary <- anova_out(fit_1,
print = TRUE,
sph.cor = "GG",
mau.p = 0.05,
etasq = "partial")
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------`
fit_1_summary <- anova_out(fit_1,
sph.cor = "GG",
mau.p = 0.05,
etasq = "partial")
fit_1_summary <- anova_out(fit_1,
print = FALSE,
sph.cor = "GG",
mau.p = 0.05,
etasq = "partial")
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------`
fit_1_summary <- anova_out(fit_1,
print = FALSE,
etasq = "partial")
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------`
?anova_out
fit_1_summary <- anova_out(fit_1, print = FALSE)
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------`
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------` %>%
kable()
library(knitr)
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------` %>%
kable()
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------`
fit_1_summary <- anova_out(fit_1, print = FALSE)
fit_1_summary$`--- FORMATTED RESULTS ------------------------------------`
fit_1 <-
ezANOVA(data = generated_data,
dv = dv,
within = timepoint,
between = condition,
wid = participant,
type = 3,
detailed = TRUE) %>%
anova_out(print = FALSE)
fit_1$`--- FORMATTED RESULTS ------------------------------------`
fit_1[,3]
fit_1[3,]
fit_1[3]
